# -*- mode: python ; coding: utf-8 -*-

import os
import importlib


def data_files_for_packages(package_files: dict) -> list:
    datas = []
    for package, files in package_files.items():
        proot = os.path.dirname(importlib.import_module(package).__file__) if package != '' else ''
        datas.extend(
            (
                os.path.join(proot, f),  # Source file pattern
                os.path.join(package, os.path.dirname(f))  # Dest relative folder
            ) for f in files)
    return datas


# This is not necessarily actual files but path patters
datas = data_files_for_packages({
    # Our app
    '': ['static/.'],
    # 3rd-party libs
    'ics': ['grammar/contentline.ebnf'],
    'pymorphy2_dicts': ['data/*.json', 'data/*.array', 'data/*.dawg', 'data/*.intdawg'],
    'rnnmorph': ['models/.'],
})

print(f'\n - Data files: {datas}\n')

block_cipher = None

a = Analysis(
    ['manage.py'],
    pathex=[os.path.abspath(SPECPATH)],
    binaries=[],
    datas=datas,
    hiddenimports=['app_config'],
    hookspath=[],
    hooksconfig={},
    runtime_hooks=[],
    excludes=[],
    win_no_prefer_redirects=False,
    win_private_assemblies=False,
    cipher=block_cipher,
    noarchive=False
)

pyz = PYZ(a.pure, a.zipped_data, cipher=block_cipher)

exe = EXE(
    pyz,
    a.scripts,
    [],
    exclude_binaries=True,
    name='app',
    debug=False,
    bootloader_ignore_signals=False,
    strip=False,
    upx=True,
    console=True,
    disable_windowed_traceback=False,
    target_arch=None,
    codesign_identity=None,
    entitlements_file=None
)

coll = COLLECT(
    exe,
    a.binaries,
    a.zipfiles,
    a.datas,
    strip=False,
    upx=True,
    upx_exclude=[],
    name='manage'
)
